<?php
namespace BuddySystem\BuddySys\Controller;

/***
 *
 * This file is part of the "BuddySystem" Extension for TYPO3 CMS.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 *  (c) 2018 Hrushikesh Sakunde <sakundehrushi@gmail.com>, buddy system
 *
 ***/
use BuddySystem\BuddySys\Domain\Model\Activity;
use TYPO3\CMS\Extbase\Domain\Repository\FrontendUserRepository;
use TYPO3\CMS\Extbase\Object\ObjectManager;
use TYPO3\CMS\Frontend\Controller\TypoScriptFrontendController;

/**
 * ActivityController
 */
class ActivityController extends \TYPO3\CMS\Extbase\Mvc\Controller\ActionController
{
    /**
     * activityRepository
     *
     * @var \BuddySystem\BuddySys\Domain\Repository\ActivityRepository
     * @inject
     */
    protected $activityRepository = null;
    protected $userId ;

    /**
     * action list
     *
     * @return void
     */
    public function listAction()
    {
        $activities = $this->activityRepository->findByUser($this->userId);
        $this->view->assign('activities', $activities);
    }





    public function initializeAction()
    {
        parent::initializeAction(); // TODO: Change the autogenerated stub

        $this->userId=$this->getFrontendUserId();
        if ($this->arguments->hasArgument('newActivity')) {
            $this->arguments->getArgument
            ('newActivity')->getPropertyMappingConfiguration()->forProperty('*')->setTypeConverterOption
            (
                'TYPO3\\CMS\\Extbase\\Property\\TypeConverter\\DateTimeConverter', \TYPO3\CMS\Extbase\Property\TypeConverter\DateTimeConverter :: CONFIGURATION_DATE_FORMAT, 'd/m/Y H:i');

        }
        if ($this->arguments->hasArgument('activity')) {
            $this->arguments->getArgument
            ('activity')->getPropertyMappingConfiguration()->forProperty('*')->setTypeConverterOption
            (
                'TYPO3\\CMS\\Extbase\\Property\\TypeConverter\\DateTimeConverter', \TYPO3\CMS\Extbase\Property\TypeConverter\DateTimeConverter :: CONFIGURATION_DATE_FORMAT, 'd/m/Y H:i');

        }

    }

    /**
     * action show
     *
     * @param \BuddySystem\BuddySys\Domain\Model\Activity $activity
     * @return void
     */
    public function showAction(\BuddySystem\BuddySys\Domain\Model\Activity $activity)
    {
        $this->view->assign('activity', $activity);
    }

    /**
     * action new
     *
     * @return void
     */
    public function newAction(\BuddySystem\BuddySys\Domain\Model\Activity $newActivity= null)
    {
       if($newActivity === null)
       {
           $newActivity = new Activity();
       }
       $this->view->assign('newActivity',$newActivity);
    }

    /**
     * action create
     *
     * @param \BuddySystem\BuddySys\Domain\Model\Activity $newActivity
     * @return void
     */
    public function createAction(\BuddySystem\BuddySys\Domain\Model\Activity $newActivity)
    {
        $newActivity->setUserid($this->userId);
        $this->addFlashMessage('The object was created. Please be aware that this action is publicly accessible unless you implement an access check. See https://docs.typo3.org/typo3cms/extensions/extension_builder/User/Index.html', '', \TYPO3\CMS\Core\Messaging\AbstractMessage::WARNING);
        $this->activityRepository->add($newActivity);
        $this->redirect('list');
    }

    /**
     * action edit
     *
     * @param \BuddySystem\BuddySys\Domain\Model\Activity $activity
     * @ignorevalidation $activity
     * @return void
     */
    public function editAction(\BuddySystem\BuddySys\Domain\Model\Activity $activity)
    {
        $this->view->assign('activity', $activity);
    }

    /**
     * action update
     *
     * @param \BuddySystem\BuddySys\Domain\Model\Activity $activity
     * @return void
     */
    public function updateAction(\BuddySystem\BuddySys\Domain\Model\Activity $activity)
    {
        $this->addFlashMessage('The object was updated. Please be aware that this action is publicly accessible unless you implement an access check. See https://docs.typo3.org/typo3cms/extensions/extension_builder/User/Index.html', '', \TYPO3\CMS\Core\Messaging\AbstractMessage::WARNING);
        $this->activityRepository->update($activity);
        $this->redirect('list');
    }

    /**
     * action delete
     *
     * @param \BuddySystem\BuddySys\Domain\Model\Activity $activity
     * @return void
     */
    public function deleteAction(\BuddySystem\BuddySys\Domain\Model\Activity $activity)
    {
        $this->addFlashMessage('The object was deleted. Please be aware that this action is publicly accessible unless you implement an access check. See https://docs.typo3.org/typo3cms/extensions/extension_builder/User/Index.html', '', \TYPO3\CMS\Core\Messaging\AbstractMessage::WARNING);
        $this->activityRepository->remove($activity);
        $this->redirect('list');
    }


    /**
     * @return int|null
     */
    private function getFrontendUserId()
    {
        return $this->getFrontendController()->fe_user->user['uid'] ?? null;
    }

    /**
     * @return TypoScriptFrontendController
     * @internal Exposed as protected to be testable with method mocks
     */
    protected function getFrontendController()
    {
        return $GLOBALS['TSFE'];
    }

}
